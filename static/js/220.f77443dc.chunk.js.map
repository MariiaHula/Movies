{"version":3,"file":"static/js/220.f77443dc.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","hook/useHttp.jsx","pages/MovieDetails/MovieDtails.styled.js","pages/MovieDetails/MovieDetails.jsx","servises/AxiosAPI.js"],"sourcesContent":["import React from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#1f43a0\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\nexport default Loader;\n","import { useEffect, useState } from 'react';\n\nexport const useHttp = (fn, param) => {\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const ownFunction = async () => {\n      try {\n        setLoading(true);\n        const data = await fn(param);\n        setData(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    ownFunction();\n  }, [fn, param]);\n\n  return { data, setData, loading, error };\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieDetailsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  margin: 20px;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  margin-top: 20px;\n`;\nexport const MovieInfo1 = styled.div`\n  margin-top: 20px;\n`;\n\nexport const MoviePoster = styled.img`\n  max-width: 200px;\n  height: 100%;\n  margin-right: 20px;\n`;\n\nexport const MovieTitle = styled.h1`\n  font-size: 24px;\n`;\n\nexport const MovieOverview = styled.p`\n  margin-top: 10px;\n`;\n\nexport const GenresList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const GenreItem = styled.li`\n  margin: 5px 0;\n`;\n\nexport const AdditionalInfo = styled.div`\n  margin-top: 20px;\n`;\n\nexport const AdditionalInfoItem = styled(Link)`\n  display: block;\n  margin: 5px 0;\n  font-size: 18px;\n`;\n","import React, { Suspense, useRef } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from '../../servises/AxiosAPI';\nimport Loader from 'components/Loader/Loader';\nimport {\n  AdditionalInfo,\n  AdditionalInfoItem,\n  GenreItem,\n  GenresList,\n  MovieDetailsContainer,\n  MovieInfo,\n  MovieInfo1,\n  MovieOverview,\n  MoviePoster,\n  MovieTitle,\n} from './MovieDtails.styled';\nimport { useHttp } from 'hook/useHttp';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const goBackRef = useRef(location.state?.from || '/');\n\n  const { data: movieInfo, loading } = useHttp(fetchMovieDetails, movieId);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  const { title, release_date, popularity, overview, genres, poster_path } =\n    movieInfo;\n\n  return (\n    <MovieDetailsContainer>\n      <Link to={goBackRef.current}>\n        <button type=\"button\">Go back</button>\n      </Link>\n      <MovieInfo>\n        <MoviePoster\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : `https://www.freeiconspng.com/thumbs/no-image-icon/no-image-icon-1.jpg`\n          }\n          alt={title}\n        />\n        <MovieInfo1>\n          <MovieTitle>\n            {title}: ({release_date?.slice(0, 4)})\n          </MovieTitle>\n          <p>User score: {(popularity / 100)?.toFixed(0)}%</p>\n          <h2>Overview</h2>\n          <MovieOverview>{overview}</MovieOverview>\n          <h2>Genres</h2>\n          <GenresList>\n            {genres?.map(genre => (\n              <GenreItem key={genre.id}>{genre.name}</GenreItem>\n            ))}\n          </GenresList>\n        </MovieInfo1>\n      </MovieInfo>\n      <hr />\n      <AdditionalInfo>\n        <h3>Additional information</h3>\n        <ul>\n          <AdditionalInfoItem to=\"cast\">Cast</AdditionalInfoItem>\n          <AdditionalInfoItem to=\"reviews\">Reviews</AdditionalInfoItem>\n        </ul>\n        <hr />\n\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </AdditionalInfo>\n    </MovieDetailsContainer>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '014d1e0498d531f96fe9aa54f119a1c9';\n\nexport const fetchTrending = async () => {\n  const { data } = await axios.get('trending/all/day', {\n    params: {\n      api_key: `${API_KEY}`,\n    },\n  });\n\n  return data.results;\n};\n\nexport const fetchMovies = async query => {\n  const { data } = await axios.get('search/movie', {\n    params: {\n      include_adult: false,\n      language: 'en-US',\n      page: 1,\n      api_key: `${API_KEY}`,\n      query: `${query}`,\n    },\n  });\n  return data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n    },\n  });\n  return data;\n};\n\nexport const fetchActors = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n    },\n  });\n  return data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`, {\n    params: {\n      language: 'en-US',\n      page: 1,\n      api_key: `${API_KEY}`,\n    },\n  });\n  return data.results;\n};\n"],"names":["_jsx","children","ThreeDots","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","useHttp","fn","param","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","useEffect","ownFunction","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_data","_context","prev","next","sent","t0","message","finish","stop","apply","arguments","MovieDetailsContainer","styled","_templateObject","_taggedTemplateLiteral","MovieInfo","_templateObject2","MovieInfo1","_templateObject3","MoviePoster","_templateObject4","MovieTitle","_templateObject5","MovieOverview","_templateObject6","GenresList","_templateObject7","GenreItem","_templateObject8","AdditionalInfo","_templateObject9","AdditionalInfoItem","Link","_templateObject10","_location$state","movieId","useParams","location","useLocation","goBackRef","useRef","state","from","_useHttp","fetchMovieDetails","movieInfo","Loader","title","release_date","popularity","overview","genres","poster_path","_jsxs","to","current","type","src","concat","alt","slice","toFixed","map","genre","name","id","Suspense","fallback","Outlet","axios","API_KEY","fetchTrending","_yield$axios$get","params","api_key","abrupt","results","fetchMovies","_ref2","_callee2","query","_yield$axios$get2","_context2","include_adult","language","page","_x","_ref3","_callee3","_yield$axios$get3","_context3","_x2","fetchActors","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}