{"version":3,"file":"static/js/871.cc5ffdca.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","hook/useHttp.jsx","pages/Reviews/Reviews.jsx","servises/AxiosAPI.js"],"sourcesContent":["import React from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#1f43a0\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\nexport default Loader;\n","import { useEffect, useState } from 'react';\n\nexport const useHttp = (fn, param) => {\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const ownFunction = async () => {\n      try {\n        setLoading(true);\n        const data = await fn(param);\n        setData(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    ownFunction();\n  }, [fn, param]);\n\n  return { data, setData, loading, error };\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../../servises/AxiosAPI';\nimport Loader from 'components/Loader/Loader';\nimport { useHttp } from 'hook/useHttp';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const { data: reviews, loading } = useHttp(fetchReviews, movieId);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      <ul>\n        {reviews.length ? (\n          reviews.map(review => (\n            <li key={review.id}>\n              <h2>Author: {review.author}</h2>\n              <p>{review.content}</p>\n            </li>\n          ))\n        ) : (\n          <p>There are no reviews for this movie yet</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '014d1e0498d531f96fe9aa54f119a1c9';\n\nexport const fetchTrending = async () => {\n  const { data } = await axios.get('trending/all/day', {\n    params: {\n      api_key: `${API_KEY}`,\n    },\n  });\n\n  return data.results;\n};\n\nexport const fetchMovies = async query => {\n  const { data } = await axios.get('search/movie', {\n    params: {\n      include_adult: false,\n      language: 'en-US',\n      page: 1,\n      api_key: `${API_KEY}`,\n      query: `${query}`,\n    },\n  });\n  return data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n    },\n  });\n  return data;\n};\n\nexport const fetchActors = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits`, {\n    params: {\n      api_key: `${API_KEY}`,\n      language: 'en-US',\n    },\n  });\n  return data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`, {\n    params: {\n      language: 'en-US',\n      page: 1,\n      api_key: `${API_KEY}`,\n    },\n  });\n  return data.results;\n};\n"],"names":["_jsx","children","ThreeDots","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","useHttp","fn","param","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","useEffect","ownFunction","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_data","_context","prev","next","sent","t0","message","finish","stop","apply","arguments","movieId","useParams","_useHttp","fetchReviews","reviews","_jsxs","Loader","length","map","review","author","content","id","axios","API_KEY","fetchTrending","_yield$axios$get","params","api_key","concat","abrupt","results","fetchMovies","_ref2","_callee2","query","_yield$axios$get2","_context2","include_adult","language","page","_x","fetchMovieDetails","_ref3","_callee3","_yield$axios$get3","_context3","_x2","fetchActors","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}